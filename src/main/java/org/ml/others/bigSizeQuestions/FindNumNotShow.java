package org.ml.others.bigSizeQuestions;

/**
 * 32位无符号整数的范围是0~4.294.967,295，现在有一个正好包含40亿个无符号整数的文件，所以在整个范围中必然存在没出现过的数。可以使用最多1GB的内存，怎么找到所有未出现过的数?
 * [进阶]
 * 内存限制为 10MB，但是只用找到一个没出现过的数即可，如果是 3kb 呢

 * 长度为 2^32 的 bit 数组，总大小为 2^32 / 8 byte = 2^29 byte = 536870912 byte = 536871 Kb = 537 Mb
 * 每个位置代表一个数字 0 未出现，1 出现
 *
 * [进阶解法]
 * 准备一个长度为 2^n 的 int 数组， 2^n < 内存(b) / 4 且 2^n 最大
 * 用 num / (2^(32-n))，这样就将 0 ~ 2^32-1 范围的数平均分成了 2^n 组，进行词频统计，
 * 找到没到达 2^(32-n) 的组，将该范围内的数继续分成 2^n 份进行下次统计，依此类推，直到得到最终结果
 *
 * 如果只能申请几个变量呢
 * 二分，0~ 2^32 - 1 的中点
 * 分别统计左右两侧的词频
 *
 * 词频不够的部分继续二分
 */
public class FindNumNotShow {

}
